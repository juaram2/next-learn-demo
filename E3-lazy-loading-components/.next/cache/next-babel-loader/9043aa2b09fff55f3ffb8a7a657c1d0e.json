{"ast":null,"code":"var _jsxFileName = \"/Users/aram/Desktop/next-learn-demo/E3-lazy-loading-components/lib/with-post.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport MyLayout from '../components/MyLayout';\nimport marked from 'marked';\nimport Highlight from 'react-highlight';\nmarked.setOptions({\n  gfm: true,\n  tables: true,\n  breaks: true\n});\nexport default function WithPost(options) {\n  return class PostPage extends React.Component {\n    renderMarkdown() {\n      // If a code snippet contains in the markdown content\n      // then use Highlight component\n      if (/~~~/.test(options.content)) {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, __jsx(Highlight, {\n          innerHTML: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, marked(options.content)));\n      } // If not, simply render the generated HTML from markdown\n\n\n      return __jsx(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: marked(options.content)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    }\n\n    render() {\n      return __jsx(MyLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, options.title), this.renderMarkdown());\n    }\n\n  };\n}","map":{"version":3,"sources":["/Users/aram/Desktop/next-learn-demo/E3-lazy-loading-components/lib/with-post.js"],"names":["React","MyLayout","marked","Highlight","setOptions","gfm","tables","breaks","WithPost","options","PostPage","Component","renderMarkdown","test","content","__html","render","title"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEAD,MAAM,CAACE,UAAP,CAAkB;AAChBC,EAAAA,GAAG,EAAE,IADW;AAEhBC,EAAAA,MAAM,EAAE,IAFQ;AAGhBC,EAAAA,MAAM,EAAE;AAHQ,CAAlB;AAMA,eAAe,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACxC,SAAO,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAC5CC,IAAAA,cAAc,GAAG;AACf;AACA;AACA,UAAI,MAAMC,IAAN,CAAWJ,OAAO,CAACK,OAAnB,CAAJ,EAAiC;AAC/B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,SAAD;AAAW,UAAA,SAAS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBZ,MAAM,CAACO,OAAO,CAACK,OAAT,CAA5B,CADF,CADF;AAKD,OATc,CAWf;;;AACA,aAAO;AAAK,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAAEb,MAAM,CAACO,OAAO,CAACK,OAAT;AAAhB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAEDE,IAAAA,MAAM,GAAG;AACP,aACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKP,OAAO,CAACQ,KAAb,CADF,EAEG,KAAKL,cAAL,EAFH,CADF;AAMD;;AAvB2C,GAA9C;AAyBD","sourcesContent":["import React from 'react'\nimport MyLayout from '../components/MyLayout'\nimport marked from 'marked'\nimport Highlight from 'react-highlight'\n\nmarked.setOptions({\n  gfm: true,\n  tables: true,\n  breaks: true\n})\n\nexport default function WithPost(options) {\n  return class PostPage extends React.Component {\n    renderMarkdown() {\n      // If a code snippet contains in the markdown content\n      // then use Highlight component\n      if (/~~~/.test(options.content)) {\n        return (\n          <div>\n            <Highlight innerHTML>{marked(options.content)}</Highlight>\n          </div>\n        );\n      }\n\n      // If not, simply render the generated HTML from markdown\n      return <div dangerouslySetInnerHTML={{ __html: marked(options.content) }} />;\n    }\n\n    render() {\n      return (\n        <MyLayout>\n          <h1>{options.title}</h1>\n          {this.renderMarkdown()}\n        </MyLayout>\n      );\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}