{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/Users/aram/Desktop/next-learn-demo/E2-lazy-loading-modules/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport loadDB from '../lib/load-db';\n\nfunction PostLink(props) {\n  return __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: \"/p/\".concat(props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.title)));\n}\n\nfunction Index(_ref) {\n  var stories = _ref.stories;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Hacker News - Latest\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, stories.map(function (story) {\n    return __jsx(PostLink, {\n      key: story.id,\n      id: story.id,\n      title: story.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  })));\n}\n\nIndex.getInitialProps = function _callee() {\n  var db, ids, stories;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(loadDB());\n\n        case 2:\n          db = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(db.child('topstories').once('value'));\n\n        case 5:\n          ids = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(_Promise.all(ids.val().slice(0, 10).map(function (id) {\n            return db.child('item').child(id).once('value');\n          })));\n\n        case 8:\n          stories = _context.sent;\n          stories = stories.map(function (s) {\n            return s.val();\n          });\n          return _context.abrupt(\"return\", {\n            stories: stories\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/aram/Desktop/next-learn-demo/E2-lazy-loading-modules/pages/index.js"],"names":["Layout","Link","loadDB","PostLink","props","id","title","Index","stories","map","story","getInitialProps","db","child","once","ids","all","val","slice","s"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,eAAQA,KAAK,CAACC,EAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACE,KAAV,CADF,CADF,CADF;AAOD;;AAED,SAASC,KAAT,OAA4B;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC1B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACC,GAAR,CAAY,UAAAC,KAAK;AAAA,WAChB,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAK,CAACL,EAArB;AAAyB,MAAA,EAAE,EAAEK,KAAK,CAACL,EAAnC;AAAuC,MAAA,KAAK,EAAEK,KAAK,CAACJ,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAAjB,CADH,CAFF,CADF;AAUD;;AAEDC,KAAK,CAACI,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLT,MAAM,EADD;;AAAA;AAChBU,UAAAA,EADgB;AAAA;AAAA,2CAGJA,EAAE,CAACC,KAAH,CAAS,YAAT,EAAuBC,IAAvB,CAA4B,OAA5B,CAHI;;AAAA;AAGhBC,UAAAA,GAHgB;AAAA;AAAA,2CAIF,SAAQC,GAAR,CAClBD,GAAG,CACAE,GADH,GAEGC,KAFH,CAES,CAFT,EAEY,EAFZ,EAGGT,GAHH,CAGO,UAAAJ,EAAE;AAAA,mBACLO,EAAE,CACCC,KADH,CACS,MADT,EAEGA,KAFH,CAESR,EAFT,EAGGS,IAHH,CAGQ,OAHR,CADK;AAAA,WAHT,CADkB,CAJE;;AAAA;AAIlBN,UAAAA,OAJkB;AAgBtBA,UAAAA,OAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,UAAAU,CAAC;AAAA,mBAAIA,CAAC,CAACF,GAAF,EAAJ;AAAA,WAAb,CAAV;AAhBsB,2CAkBf;AAAET,YAAAA,OAAO,EAAPA;AAAF,WAlBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAqBA,eAAeD,KAAf","sourcesContent":["import Layout from '../components/MyLayout.js'\nimport Link from 'next/link'\nimport loadDB from '../lib/load-db'\n\nfunction PostLink(props) {\n  return (\n    <li>\n      <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n        <a>{props.title}</a>\n      </Link>\n    </li>\n  )\n}\n\nfunction Index({ stories }) {\n  return (\n    <Layout>\n      <h1>Hacker News - Latest</h1>\n      <ul>\n        {stories.map(story => (\n          <PostLink key={story.id} id={story.id} title={story.title} />\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nIndex.getInitialProps = async function() {\n  const db = await loadDB()\n\n  const ids = await db.child('topstories').once('value')\n  let stories = await Promise.all(\n    ids\n      .val()\n      .slice(0, 10)\n      .map(id =>\n        db\n          .child('item')\n          .child(id)\n          .once('value')\n      )\n  )\n\n  stories = stories.map(s => s.val())\n\n  return { stories }\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}