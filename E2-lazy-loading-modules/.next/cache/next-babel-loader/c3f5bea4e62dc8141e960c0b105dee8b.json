{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nexport default function loadDb() {\n  var firebase;\n  return _regeneratorRuntime.async(function loadDb$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(import('firebase/app'));\n\n        case 2:\n          firebase = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(import('firebase/database'));\n\n        case 5:\n          try {\n            firebase.initializeApp({\n              databaseURL: 'https://hacker-news.firebaseio.com'\n            });\n          } catch (err) {\n            // we skip the \"already exists\" message which is\n            // not an actual error when we're hot-reloading\n            if (!/already exists/.test(err.message)) {\n              console.error('Firebase initialization error', err.stack);\n            }\n          }\n\n          return _context.abrupt(\"return\", firebase.database().ref('v0'));\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}