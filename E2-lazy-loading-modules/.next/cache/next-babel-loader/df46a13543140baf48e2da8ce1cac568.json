{"ast":null,"code":"var _jsxFileName = \"/Users/aram/Desktop/next-learn-demo/E2-lazy-loading-modules/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport loadDB from '../lib/load-db';\n\nfunction PostLink(props) {\n  return __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: `/p/${props.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.title)));\n}\n\nfunction Index({\n  stories\n}) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Hacker News - Latest\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, stories.map(story => __jsx(PostLink, {\n    key: story.id,\n    id: story.id,\n    title: story.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))));\n}\n\nIndex.getInitialProps = async function () {\n  const db = await loadDB();\n  const ids = await db.child('topstories').once('value');\n  let stories = await Promise.all(ids.val().slice(0, 10).map(id => db.child('item').child(id).once('value')));\n  stories = stories.map(s => s.val());\n  return {\n    stories\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/aram/Desktop/next-learn-demo/E2-lazy-loading-modules/pages/index.js"],"names":["Layout","Link","loadDB","PostLink","props","id","title","Index","stories","map","story","getInitialProps","db","ids","child","once","Promise","all","val","slice","s"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,EAAG,MAAKA,KAAK,CAACC,EAAG,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACE,KAAV,CADF,CADF,CADF;AAOD;;AAED,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA4B;AAC1B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACC,GAAR,CAAYC,KAAK,IAChB,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAK,CAACL,EAArB;AAAyB,IAAA,EAAE,EAAEK,KAAK,CAACL,EAAnC;AAAuC,IAAA,KAAK,EAAEK,KAAK,CAACJ,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD;;AAEDC,KAAK,CAACI,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,EAAE,GAAG,MAAMV,MAAM,EAAvB;AAEA,QAAMW,GAAG,GAAG,MAAMD,EAAE,CAACE,KAAH,CAAS,YAAT,EAAuBC,IAAvB,CAA4B,OAA5B,CAAlB;AACA,MAAIP,OAAO,GAAG,MAAMQ,OAAO,CAACC,GAAR,CAClBJ,GAAG,CACAK,GADH,GAEGC,KAFH,CAES,CAFT,EAEY,EAFZ,EAGGV,GAHH,CAGOJ,EAAE,IACLO,EAAE,CACCE,KADH,CACS,MADT,EAEGA,KAFH,CAEST,EAFT,EAGGU,IAHH,CAGQ,OAHR,CAJJ,CADkB,CAApB;AAYAP,EAAAA,OAAO,GAAGA,OAAO,CAACC,GAAR,CAAYW,CAAC,IAAIA,CAAC,CAACF,GAAF,EAAjB,CAAV;AAEA,SAAO;AAAEV,IAAAA;AAAF,GAAP;AACD,CAnBD;;AAqBA,eAAeD,KAAf","sourcesContent":["import Layout from '../components/MyLayout.js'\nimport Link from 'next/link'\nimport loadDB from '../lib/load-db'\n\nfunction PostLink(props) {\n  return (\n    <li>\n      <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n        <a>{props.title}</a>\n      </Link>\n    </li>\n  )\n}\n\nfunction Index({ stories }) {\n  return (\n    <Layout>\n      <h1>Hacker News - Latest</h1>\n      <ul>\n        {stories.map(story => (\n          <PostLink key={story.id} id={story.id} title={story.title} />\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nIndex.getInitialProps = async function() {\n  const db = await loadDB()\n\n  const ids = await db.child('topstories').once('value')\n  let stories = await Promise.all(\n    ids\n      .val()\n      .slice(0, 10)\n      .map(id =>\n        db\n          .child('item')\n          .child(id)\n          .once('value')\n      )\n  )\n\n  stories = stories.map(s => s.val())\n\n  return { stories }\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}